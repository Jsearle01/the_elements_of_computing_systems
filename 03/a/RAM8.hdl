// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here.
    DMux8Way(in=load, sel=address, a=rla, b=rlb, c=rlc, d=rld, e=rle, f=rlf, g=rlg, h=rlh);
    Register(in=in,load=rla,out=roa);
    Register(in=in,load=rlb,out=rob);
    Register(in=in,load=rlc,out=roc);
    Register(in=in,load=rld,out=rod);
    Register(in=in,load=rle,out=roe);
    Register(in=in,load=rlf,out=rof);
    Register(in=in,load=rlg,out=rog);
    Register(in=in,load=rlh,out=roh);
    Mux8Way16(out=out,sel=address, a=roa, b=rob, c=roc, d=rod, e=roe, f=rof, g=rog, h=roh);
}

