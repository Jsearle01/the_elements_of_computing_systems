// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        var char k, newKey;
        let k = 0;
        while (k = 0) {
            let k = Keyboard.keyPressed();
        }
        do Output.printChar(k);

        let newKey = Keyboard.keyPressed();
        while (k = newKey) {
            let newKey = Keyboard.keyPressed();
        }

        return k;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
        var char c;
        var String line;
        var char newLine;
        var char backSpace;
        var int length;

        let newLine = String.newLine();
        let backSpace = String.backSpace();

        let line = String.new(40);
        let length = line.length();

        do Output.printString(message);

        while (-1) {
            let c = Keyboard.readChar();
            if (c = newLine) {
                do Output.println();
                return line;
            } else {
                if (c = backSpace) {
                    do line.eraseLastChar();
                } else {
                    do line.appendChar(c);
                }
            }
        }
        return -1;
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var String line;
        let line =  Keyboard.readLine(message);
        return line.intValue();
    }
}
