function Memory.init 1
push constant 2048
pop static 0
push static 0
pop local 0
push constant 0
push local 0
add
push constant 16383
push constant 2048
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 1
push constant 0
pop local 0
push argument 0
push local 0
add
pop pointer 1
push that 0
return
function Memory.poke 1
push constant 0
pop local 0
push argument 0
push local 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 1
push static 0
push argument 0
call Memory.findBlock 2
pop local 0
push local 0
return
function Memory.findBlock 1
push argument 0
pop local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
call Memory.getBlock 2
return
goto IF_END0
label IF_FALSE0
push constant 1
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
goto IF_END1
label IF_FALSE1
push constant 1
push local 0
add
pop pointer 1
push that 0
push argument 1
call Memory.findBlock 2
return
label IF_END1
label IF_END0
function Memory.getBlock 7
push argument 0
pop local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 2
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 3
push argument 1
push constant 1
add
pop local 6
push local 2
push local 6
sub
push constant 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 6
add
pop local 1
push constant 0
push local 1
add
push local 2
push argument 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 1
add
push local 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
call Memory.removeBlock 1
pop temp 0
push local 1
call Memory.addBlock 1
pop temp 0
push constant 0
push local 0
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 4
push local 4
return
function Memory.removeBlock 1
push argument 0
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop static 0
push constant 0
return
label IF_FALSE0
push static 0
pop local 0
label WHILE_EXP0
push constant 1
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
not
if-goto WHILE_END0
push constant 1
push local 0
add
pop pointer 1
push that 0
push argument 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
push local 0
add
push constant 1
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE1
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.addBlock 0
push constant 1
push argument 0
add
push static 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
pop static 0
push constant 0
return
function Memory.deAlloc 0
push argument 0
push constant 1
sub
call Memory.addBlock 1
pop temp 0
push constant 0
return
